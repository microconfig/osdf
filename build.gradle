plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id "io.freefair.lombok" version "5.0.0"
    id 'org.sonarqube' version '2.8'
}

group 'io.microconfig.osdf'
version '1.5.13'

sourceCompatibility = 11

jar {
    manifest {
        attributes(
                'Main-Class': 'io.osdf.CliStarter',
                'Multi-Release': true
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        nexus(MavenPublication) {
            pom {
                name = 'OSDF'
                description = 'OpenShift deploy tool based on Microconfig'
                url = 'https://github.com/microconfig/osdf'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/microconfig/osdf.git'
                    developerConnection = 'scm:git:https://github.com/microconfig/osdf.git'
                    url = 'https://github.com/microconfig/osdf'
                }
                developers {
                    developer {
                        id = 'amatorin'
                        name = 'Alexander Matorin'
                        email = 'alx.matorin@gmail.com'
                    }
                    developer {
                        id = 'apavlov'
                        name = 'Artem Pavlov'
                        email = 'admpavlov@yandex.ru'
                    }
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.nexus
}

repositories {
    mavenCentral()
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'io/osdf/api/parameters')
        })
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "microconfig_osdf"
        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build/classes"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

apply from: 'jmeter.gradle'

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:2.2.6.RELEASE')

    implementation 'org.yaml:snakeyaml'
    implementation 'commons-io:commons-io:2.5'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'commons-codec:commons-codec'
    implementation 'io.microconfig:microconfig-cli:4.1.8:all'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.jasypt:jasypt:1.9.3'


    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.mockito:mockito-core'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

}

test {
    useJUnitPlatform()
}